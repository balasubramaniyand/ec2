pipeline {
    agent any

    stages {
        stage('SSH Connection') {
            steps {
                script {
                    try {
                        sh "ssh -p 7774 ${params.USERNAME}@${params.IP_ADDRESS} 'cd /opt/supportfirst/imapservice && nohup java -jar IMAPService-0.0.1-SNAPSHOT.war &'"
                        // Wait for the application to start (adjust sleep time as needed)
                        sleep time: 30
                    } catch (Exception e) {
                        currentBuild.result = 'FAILURE'
                        error "Failed to start application via SSH: ${e.message}"
                    }
                }
            }
        }
    }
    
    post {
        always {
            script {
                def projectName = env.JOB_NAME
                def buildNumber = env.BUILD_NUMBER
                def buildUrl = env.BUILD_URL
                
                if (currentBuild.result == 'FAILURE') {
                    mail to: 'balasubramaniyan.d@iopex.com',
                     cc: 'rohith.venkatesh@iopex.com',
                    subject: 'Build unsuccessful',
                    body: "Hello Team,\n\nThe build to the staging environment is unsuccessful.\n\nPlease find the required details below.\n\nProject: ${projectName}\n\nBuild Number: ${buildNumber}\n\nURL: ${buildUrl}"
                } else {
                    mail to: 'balasubramaniyan.d@iopex.com',
                    subject: 'Build successful',
                    body: "Hello Team,\n\nThe build to the staging environment is successful.\n\nPlease find the required details below.\n\nProject: ${projectName}\n\nBuild Number: ${buildNumber}\n\nURL: ${buildUrl}"
                }
            }
        }
    }
}
